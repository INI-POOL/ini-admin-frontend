{"version":3,"file":"Preferences-Y9QGmbtG.js","sources":["../../src/stores/user-store.ts","../../src/pages/preferences/preferences-header/PreferencesHeader.vue","../../src/pages/preferences/styles.ts","../../src/pages/preferences/settings/Settings.vue","../../src/pages/preferences/modals/EditNameModal.vue","../../src/pages/preferences/modals/ResetPasswordModal.vue","../../src/pages/preferences/Preferences.vue"],"sourcesContent":["import { defineStore } from \"pinia\";\n\nexport const useUserStore = defineStore(\"user\", {\n  state: () => {\n    return {\n      userName: \"Vasili Savitski\",\n      email: \"vasili@gmail.com\",\n      memberSince: \"8/12/2020\",\n      pfp: \"https://picsum.photos/id/22/200/300\",\n      is2FAEnabled: false,\n    };\n  },\n\n  actions: {\n    toggle2FA() {\n      this.is2FAEnabled = !this.is2FAEnabled;\n    },\n\n    changeUserName(userName: string) {\n      this.userName = userName;\n    },\n  },\n});\n","<template>\n  <VaAvatar size=\"large\" color=\"warning\"\n    ><span class=\"text-4xl\"> üòç </span></VaAvatar\n  >\n  <div class=\"flex flex-col justify-center\">\n    <h2 class=\"text-[28px] md:text-[32px] leading-10 font-bold\">\n      {{ store.userName }}\n    </h2>\n    <div class=\"flex space-x-1 text-[13px] leading-4\">\n      <p>Member since</p>\n      <p>{{ store.memberSince }}</p>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { useUserStore } from \"../../../stores/user-store\";\n\nconst store = useUserStore();\n</script>\n","export const buttonStyles = {\n  \"--va-button-font-size\": \"14px\",\n  \"--va-button-line-height\": \"20px\",\n};\n","<template>\n  <div\n    class=\"flex flex-col md:flex-row md:items-center space-y-2 md:space-y-0 md:space-x-6 min-h-[36px] leading-5\"\n  >\n    <p class=\"font-bold w-[200px]\">Name</p>\n    <div class=\"flex-1\">\n      <div class=\"max-w-[748px]\">\n        {{ store.userName }}\n      </div>\n    </div>\n    <VaButton\n      :style=\"buttonStyles\"\n      class=\"w-fit h-fit\"\n      preset=\"primary\"\n      @click=\"emits('openNameModal')\"\n    >\n      Edit\n    </VaButton>\n  </div>\n  <VaDivider />\n  <div\n    class=\"flex flex-col md:flex-row space-y-2 md:space-y-0 md:space-x-6 min-h-[36px] leading-5\"\n  >\n    <p class=\"font-bold w-[200px]\">Email</p>\n    <div class=\"flex-1\">\n      <div class=\"max-w-[748px]\">\n        {{ store.email }}\n      </div>\n    </div>\n  </div>\n  <div\n    class=\"flex flex-col md:flex-row space-y-2 md:space-y-0 md:space-x-6 min-h-[36px] leading-5\"\n  >\n    <p class=\"font-bold w-[200px]\">Password</p>\n    <div class=\"flex-1\">\n      <div class=\"max-w-[748px]\">‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢</div>\n    </div>\n    <VaButton\n      :style=\"buttonStyles\"\n      class=\"w-fit h-fit\"\n      preset=\"primary\"\n      @click=\"emits('openResetPasswordModal')\"\n    >\n      Reset Password\n    </VaButton>\n  </div>\n  <VaDivider />\n  <div\n    class=\"flex flex-col md:flex-row space-y-2 md:space-y-0 md:space-x-6 min-h-[36px] leading-5\"\n  >\n    <p class=\"font-bold w-[200px]\">Two-factor authentication</p>\n    <div class=\"flex-1\">\n      <div class=\"max-w-[748px]\">\n        {{ twoFA.content }}\n      </div>\n    </div>\n    <VaButton\n      :style=\"buttonStyles\"\n      class=\"w-fit h-fit\"\n      preset=\"primary\"\n      :color=\"twoFA.color\"\n      @click=\"toggle2FA\"\n    >\n      {{ twoFA.button }}\n    </VaButton>\n  </div>\n  <VaDivider />\n  <div\n    class=\"flex flex-col md:flex-row space-y-2 md:space-y-0 md:space-x-6 min-h-[36px] leading-5\"\n  >\n    <p class=\"font-bold w-[200px]\">Email subscriptions</p>\n    <div class=\"flex-1\">\n      <div class=\"max-w-[748px]\">\n        <p>To manage what emails you get, visit the</p>\n        <div class=\"flex space-x-1 w-fit\">\n          <RouterLink\n            :to=\"{ name: 'settings' }\"\n            class=\"font-semibold text-primary\"\n            >Notification settings</RouterLink\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { computed } from \"vue\";\n\nimport { useToast } from \"vuestic-ui\";\n\nimport { useUserStore } from \"../../../stores/user-store\";\n\nimport { buttonStyles } from \"../styles\";\n\nconst store = useUserStore();\n\nconst { init } = useToast();\n\nconst toastMessage = computed(() =>\n  store.is2FAEnabled ? \"2FA successfully enabled\" : \"2FA successfully disabled\",\n);\n\nconst twoFA = computed(() => {\n  if (store.is2FAEnabled) {\n    return {\n      color: \"danger\",\n      button: \"Disable 2FA\",\n      content:\n        \"Two-Factor Authentication (2FA) is now enabled for your account, adding an extra layer of security to your sign-ins.\",\n    };\n  } else {\n    return {\n      color: \"primary\",\n      button: \"Set up 2FA\",\n      content:\n        \"Add an extra layer of security to your account. To sign in, you‚Äôll need to provide a code along with your username and password.\",\n    };\n  }\n});\n\nconst toggle2FA = () => {\n  store.toggle2FA();\n  init({ message: toastMessage.value, color: \"success\" });\n};\n\nconst emits = defineEmits([\"openNameModal\", \"openResetPasswordModal\"]);\n</script>\n","<template>\n  <VaModal\n    :mobile-fullscreen=\"false\"\n    size=\"small\"\n    hide-default-actions\n    max-width=\"380px\"\n    model-value\n    close-button\n    @update:modelValue=\"emits('cancel')\"\n  >\n    <h1 class=\"va-h5 mb-4\">Reset password</h1>\n    <VaForm ref=\"form\" @submit.prevent=\"submit\">\n      <VaInput v-model=\"Name\" class=\"mb-4\" label=\"Name\" placeholder=\"Name\" />\n      <div\n        class=\"flex flex-col-reverse md:flex-row md:items-center md:justify-end md:space-x-4\"\n      >\n        <VaButton\n          :style=\"buttonStyles\"\n          preset=\"secondary\"\n          color=\"secondary\"\n          @click=\"emits('cancel')\"\n        >\n          Cancel</VaButton\n        >\n        <VaButton\n          :style=\"buttonStyles\"\n          class=\"mb-4 md:mb-0\"\n          type=\"submit\"\n          @click=\"submit\"\n        >\n          Save</VaButton\n        >\n      </div>\n    </VaForm>\n  </VaModal>\n</template>\n<script lang=\"ts\" setup>\nimport { ref } from \"vue\";\nimport { useUserStore } from \"../../../stores/user-store\";\n\nimport { buttonStyles } from \"../styles\";\nimport { useToast } from \"vuestic-ui\";\n\nconst store = useUserStore();\n\nconst { init } = useToast();\n\nconst emits = defineEmits([\"cancel\"]);\n\nconst Name = ref<string>(store.userName);\n\nconst submit = () => {\n  if (!Name.value || Name.value === store.userName) {\n    return emits(\"cancel\");\n  }\n\n  store.changeUserName(Name.value);\n  init({ message: \"You've successfully changed your name\", color: \"success\" });\n  emits(\"cancel\");\n};\n</script>\n\n<style lang=\"scss\">\n// TODO temporary before https://github.com/epicmaxco/vuestic-ui/issues/4020 fix\n.va-modal__inner {\n  min-width: 326px;\n}\n</style>\n","<template>\n  <VaModal\n    max-width=\"530px\"\n    :mobile-fullscreen=\"false\"\n    hide-default-actions\n    model-value\n    close-button\n    @update:modelValue=\"emits('cancel')\"\n  >\n    <h1 class=\"va-h5 mb-4\">Reset password</h1>\n    <VaForm ref=\"form\" class=\"space-y-6\" @submit.prevent=\"submit\">\n      <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        <VaInput\n          v-model=\"oldPassowrd\"\n          :rules=\"oldPasswordRules\"\n          label=\"Old password\"\n          placeholder=\"Old password\"\n          required-mark\n          type=\"password\"\n        />\n        <div class=\"hidden md:block\" />\n        <VaInput\n          v-model=\"newPassword\"\n          :rules=\"newPasswordRules\"\n          label=\"New password\"\n          placeholder=\"New password\"\n          required-mark\n          type=\"password\"\n        />\n        <VaInput\n          v-model=\"repeatNewPassword\"\n          :rules=\"repeatNewPasswordRules\"\n          label=\"Repeat new password\"\n          placeholder=\"Repeat new password\"\n          required-mark\n          type=\"password\"\n        />\n      </div>\n      <div class=\"flex flex-col space-y-2\">\n        <div class=\"flex space-x-2 items-center\">\n          <div>\n            <VaIcon\n              :name=\"newPassword?.length! >= 8 ? 'mso-check' : 'mso-close'\"\n              color=\"secondary\"\n              size=\"20px\"\n            />\n          </div>\n          <p>Must be at least 8 characters long</p>\n        </div>\n        <div class=\"flex space-x-2 items-center\">\n          <div>\n            <VaIcon\n              :name=\"new Set(newPassword).size >= 6 ? 'mso-check' : 'mso-close'\"\n              color=\"secondary\"\n              size=\"20px\"\n            />\n          </div>\n          <p>Must contain at least 6 unique characters</p>\n        </div>\n      </div>\n      <div\n        class=\"flex flex-col-reverse md:justify-end md:flex-row md:space-x-4\"\n      >\n        <VaButton\n          :style=\"buttonStyles\"\n          preset=\"secondary\"\n          color=\"secondary\"\n          @click=\"emits('cancel')\"\n        >\n          Cancel</VaButton\n        >\n        <VaButton\n          :style=\"buttonStyles\"\n          class=\"mb-4 md:mb-0\"\n          type=\"submit\"\n          @click=\"submit\"\n        >\n          Update Password</VaButton\n        >\n      </div>\n    </VaForm>\n  </VaModal>\n</template>\n<script lang=\"ts\" setup>\nimport { ref } from \"vue\";\nimport { useForm, useToast } from \"vuestic-ui\";\n\nimport { buttonStyles } from \"../styles\";\n\nconst oldPassowrd = ref<string>();\nconst newPassword = ref<string>();\nconst repeatNewPassword = ref<string>();\n\nconst { validate } = useForm(\"form\");\nconst { init } = useToast();\n\nconst emits = defineEmits([\"cancel\"]);\n\nconst submit = () => {\n  if (validate()) {\n    init({\n      message: \"You've successfully changed your password\",\n      color: \"success\",\n    });\n    emits(\"cancel\");\n  }\n};\n\nconst oldPasswordRules = [\n  (v: string) => !!v || \"Old password field is required\",\n];\n\nconst newPasswordRules = [\n  (v: string) => !!v || \"New password field is required\",\n  (v: string) => v?.length >= 8 || \"Must be at least 8 characters long\",\n  (v: string) =>\n    new Set(v).size >= 6 || \"Must contain at least 6 unique characters\",\n  (v: string) => v !== oldPassowrd.value || \"New password cannot be the same\",\n];\n\nconst repeatNewPasswordRules = [\n  (v: string) => !!v || \"Repeat new password field is required\",\n  (v: string) =>\n    v === newPassword.value || \"Confirm password does not match new password\",\n];\n</script>\n\n<style lang=\"scss\">\n// TODO temporary before https://github.com/epicmaxco/vuestic-ui/issues/4020 fix\n.va-modal__inner {\n  min-width: 326px;\n}\n</style>\n","<template>\n  <h1 class=\"page-title\">Preferences</h1>\n  <div class=\"flex flex-col p-4 space-y-10 bg-backgroundSecondary rounded-lg\">\n    <div class=\"flex space-x-5\">\n      <PreferencesHeader />\n    </div>\n    <div class=\"space-y-4 md:space-y-6\">\n      <Settings\n        @openNameModal=\"isEditNameModalOpen = true\"\n        @openResetPasswordModal=\"isResetPasswordModalOpen = true\"\n      />\n    </div>\n  </div>\n  <EditNameModal\n    v-if=\"isEditNameModalOpen\"\n    @cancel=\"isEditNameModalOpen = false\"\n  />\n  <ResetPasswordModal\n    v-if=\"isResetPasswordModalOpen\"\n    @cancel=\"isResetPasswordModalOpen = false\"\n  />\n</template>\n<script lang=\"ts\" setup>\nimport { ref } from \"vue\";\n\nimport PreferencesHeader from \"./preferences-header/PreferencesHeader.vue\";\nimport Settings from \"./settings/Settings.vue\";\nimport EditNameModal from \"./modals/EditNameModal.vue\";\nimport ResetPasswordModal from \"./modals/ResetPasswordModal.vue\";\n\nconst isEditNameModalOpen = ref(false);\nconst isResetPasswordModalOpen = ref(false);\n</script>\n"],"names":["useUserStore","defineStore","userName","store","buttonStyles","init","useToast","toastMessage","computed","twoFA","toggle2FA","emits","__emit","Name","ref","submit","oldPassowrd","newPassword","repeatNewPassword","validate","useForm","oldPasswordRules","v","newPasswordRules","repeatNewPasswordRules","isEditNameModalOpen","isResetPasswordModalOpen"],"mappings":"oPAEa,MAAAA,EAAeC,EAAY,OAAQ,CAC9C,MAAO,KACE,CACL,SAAU,kBACV,MAAO,mBACP,YAAa,YACb,IAAK,sCACL,aAAc,EAAA,GAIlB,QAAS,CACP,WAAY,CACL,KAAA,aAAe,CAAC,KAAK,YAC5B,EAEA,eAAeC,EAAkB,CAC/B,KAAK,SAAWA,CAClB,CACF,CACF,CAAC,iMCLD,MAAMC,EAAQH,yTCjBDI,EAAe,CAC1B,wBAAyB,OACzB,0BAA2B,MAC7B,8yBC2FA,MAAMD,EAAQH,IAER,CAAE,KAAAK,GAASC,IAEXC,EAAeC,EAAS,IAC5BL,EAAM,aAAe,2BAA6B,2BAAA,EAG9CM,EAAQD,EAAS,IACjBL,EAAM,aACD,CACL,MAAO,SACP,OAAQ,cACR,QACE,sHAAA,EAGG,CACL,MAAO,UACP,OAAQ,aACR,QACE,kIAAA,CAGP,EAEKO,EAAY,IAAM,CACtBP,EAAM,UAAU,EAChBE,EAAK,CAAE,QAASE,EAAa,MAAO,MAAO,UAAW,CAAA,EAGlDI,EAAQC,0mDClFd,MAAMT,EAAQH,IAER,CAAE,KAAAK,GAASC,IAEXK,EAAQC,EAERC,EAAOC,EAAYX,EAAM,QAAQ,EAEjCY,EAAS,IAAM,CACnB,GAAI,CAACF,EAAK,OAASA,EAAK,QAAUV,EAAM,SACtC,OAAOQ,EAAM,QAAQ,EAGjBR,EAAA,eAAeU,EAAK,KAAK,EAC/BR,EAAK,CAAE,QAAS,wCAAyC,MAAO,SAAW,CAAA,EAC3EM,EAAM,QAAQ,CAAA,wpCC+BhB,MAAMK,EAAcF,IACdG,EAAcH,IACdI,EAAoBJ,IAEpB,CAAE,SAAAK,CAAA,EAAaC,EAAQ,MAAM,EAC7B,CAAE,KAAAf,GAASC,IAEXK,EAAQC,EAERG,EAAS,IAAM,CACfI,MACGd,EAAA,CACH,QAAS,4CACT,MAAO,SAAA,CACR,EACDM,EAAM,QAAQ,EAChB,EAGIU,EAAmB,CACtBC,GAAc,CAAC,CAACA,GAAK,gCAAA,EAGlBC,EAAmB,CACtBD,GAAc,CAAC,CAACA,GAAK,iCACrBA,IAAcA,GAAA,YAAAA,EAAG,SAAU,GAAK,qCAChCA,GACC,IAAI,IAAIA,CAAC,EAAE,MAAQ,GAAK,4CACzBA,GAAcA,IAAMN,EAAY,OAAS,iCAAA,EAGtCQ,EAAyB,CAC5BF,GAAc,CAAC,CAACA,GAAK,wCACrBA,GACCA,IAAML,EAAY,OAAS,8CAAA,2+DC7FzB,MAAAQ,EAAsBX,EAAI,EAAK,EAC/BY,EAA2BZ,EAAI,EAAK"}