{"version":3,"file":"allocate-TDMx91uj.js","sources":["../../src/pages/allocate/allocate.vue"],"sourcesContent":["<template>\n    <va-card class=\"machines-list\">\n        <!-- 搜索和过滤区域 -->\n        <div class=\"mb-4\">\n\t\t\t选择日期：\n            <va-date-input\n                v-model=\"searchDate\"\n                placeholder=\"选择日期\"\n                class=\"mb-1 mr-5\"\n                :style=\"{ maxWidth: '20%'}\"\n\t\t\t\t:allowed-days=\"(date) => !isDateDisabled(date)\"\n            />\n\t\t\t分组：\n\t\t\t<va-select v-model=\"searchGroup\" :options=\"groupOptions\" placeholder=\"组名\" class=\"filter-item mb-1 mr-8\" :style=\"{ maxWidth: '13%' }\" />\n<!--            <div class=\"filters-row mt-4\">\n                <va-button @click=\"refreshList\" class=\"ml-5\">\n                    搜索\n                </va-button>\n                <va-button @click=\"refreshData\" class=\"ml-5\">\n                    刷新\n                </va-button>\n            </div> -->\n        </div>\n\n        <!-- 列表区域 -->\n        <div class=\"table-responsive\">\n            \n            <VaDataTable :items=\"user_profits\" :columns=\"columns\" striped class=\"responsive-table\">\n                <template #cell(record_date)=\"{ value }\">\n                    {{ value ? value.split('T')[0] : '' }}\n                </template>\n                <template #cell(need_allocate)=\"{ value }\">\n                    {{ value === 1 ? '是' : '否' }}\n                </template>\n                <template #cell(status)=\"{ value }\">\n                    {{ statusMap[value]}}\n                </template>\n\t\t\t\t<template #cell(created_time)=\"{ value }\">\n\t\t\t\t    {{ timestampToFormattedTime(value) }}\n\t\t\t\t</template>\n            </VaDataTable>\n        </div>\n\n        <!-- 分页 -->\n        <div class=\"flex justify-end mt-4\">\n            <VaPagination\n                v-model=\"currentStartIndex\"\n                :page-size=\"queryParams.pagesize\"\n                visible-pages=\"5\"\n                :total=\"totalItems\"\n                buttons-preset=\"secondary\"\n                boundary-numbers\n                @update:modelValue=\"handlePageChange\"\n            />\n            <span class=\"ml-4 self-center text-gray-600\">\n                共 {{ totalItems }} 条记录\n            </span>\n        </div>\n    </va-card>\n</template>\n\n<script setup>\nimport { ref, reactive,computed } from 'vue'\nimport { machineOptions } from \"../../api/machines\"\nimport { allocated } from \"../../api/allocate\"\nimport { formatDateTime,isDateDisabled,getYesterday,convertDateTimeToDate,timestampToFormattedTime } from \"../../utils/date.ts\"\nimport { useToast } from \"vuestic-ui\"\n\nconst { init: toast } = useToast()\n\n// 修改初始值\nconst searchDate = ref(getYesterday(8))\n\nconst searchCurrency = ref('')\n// const currencyOptions = ref([\n//     { value: 'aleo', text: 'Aleo' },\n//     // 其他币种选项\n// ])\nconst searchMachine = ref('');\n\nconst allocOptions = ref([\n    { value: 'hashrate', text: '算力' },\n    { value: 'time', text: '时长' },\n])\nconst groupOptions = ref([]);\n\nconst searchGroup = ref('')\nconst currentStartIndex = ref(1)\nconst totalItems = ref(0)\nconst user_profits = ref([])\nconst loading = ref(false)\n\n// 修改查询参数的初始化\nconst queryParams = reactive({\n    page: 1,\n    pagesize: 15,\n    date: new Date().toISOString().split('T')[0],\n    currency: 'aleo'\n})\n\nconst isModalVisible = ref(false); // 控制弹出框显示\nconst apiData = ref(null); // 存储后端返回数据\n\nconst columnsNew = [\n  { key: 'uid', label: '用户UID'},\n  { key: 'sub_user_name', label: '子账户名' },\n  { key: 'machines', label: '机器数' },\n  { key: 'day_profits', label: '分配收益 '},\n  { key: 'fees', label: '手续费 ' },\n];\n\nconst convertToOptions = (arr) => \n  arr.map(item => ({ value: item, text: item }));\nconst fetchMachineOptions = async () => {\n  try {\n    const response = await machineOptions()\n    const defaultOption = { value: '', text: '所有' };\n    groupOptions.value = [defaultOption, ...convertToOptions(response.groups || [])];\n  } catch (error) {\n    console.error('接口调用失败:', error)\n    // 异常处理逻辑\n  }\n}\n\n// 添加日期格式化函数\nconst formatDate = (date) => {\n    if (!date) return ''\n    const d = new Date(date)\n    const year = d.getFullYear()\n    const month = String(d.getMonth() + 1).padStart(2, '0')\n    const day = String(d.getDate()).padStart(2, '0')\n    return `${year}-${month}-${day}`\n}\n\nconst allocOnline = async (row,allocType) => {\n  loading.value = true; // 显示加载状态\n  console.log(\"record_date is\",row.rowData.record_date)\n  try {\n    const params = {\n        date: convertDateTimeToDate(row.rowData.record_date),\n        currency: row.rowData.currency,\n\t\tgroup: row.rowData.group,\n\t\talloc_type: allocType\n    }\n    const response = await preAlloc(params)\n\tconsole.log(\"data is\",response)\n\n    apiData.value = response; // 存储返回数据\n    isModalVisible.value = true; // 显示弹出框\n  } catch (error) {\n    console.error('获取数据失败:', error);\n    alert('获取数据失败，请重试！');\n  } finally {\n    loading.value = false; // 隐藏加载状态\n  }\n};\n\n// 修改 fetchData 方法\nconst fetchData = async () => {\n    loading.value = true\n    try {\n        const params = {\n\t\t\tpage: queryParams.page,\n\t\t\tpagesize: queryParams.pagesize,\n            date: queryParams.date,\n            currency: searchCurrency.value?.value || 'aleo'\n        }\n        \n        // 只有当选择了日期时才添加日期参数\n        if (searchDate.value) {\n            params.date = formatDate(searchDate.value)\n        }\n\t\t\n\t\tif (searchGroup.value?.value) {\n\t\t\tparams.group = searchGroup.value?.value\n\t\t}\n\t\t\n        const res = await allocated(params)\n        // 因为拦截器已经处理了 res.data 的解构，这里直接使用返回值\n        if (res?.user_profits) {\n            user_profits.value = res.user_profits\n            totalItems.value = res.total\n        } else {\n            user_profits.value = []\n            totalItems.value = 0\n        }\n    } catch (error) {\n        console.error(\"获取数据失败:\", error)\n        toast({\n            message: error.message || \"获取数据失败\",\n            color: \"danger\",\n        })\n        user_profits.value = []\n        totalItems.value = 0\n    } finally {\n        loading.value = false\n    }\n}\n\n// 添加 watch 以监听搜索条件变化\nimport { watch } from 'vue'\n\nwatch([searchDate, searchCurrency,searchGroup], () => {\n    queryParams.page = 1\n    currentStartIndex.value = 1\n    fetchData()\n\t\n})\n\nconst statusMap = {\n                0: '未开始',\n                1: '已完成',\n                2: '已失败',\n            }\n\nconst columns = [\n\t{ key: 'record_date', label: '记录日期' },\n    { key: 'uid', label: '用户Uid' },\n\t{ key: 'sub_user_name', label: '子账户' },\n    { key: 'machines', label: '机器数' },\n    { key: 'profit', label: '分配收益' },\n    { key: 'fee', label: '手续费' },\n\t{ key: 'group', label: '组名' },\n    { key: 'created_time', label: '分配时间' },\n]\n\n// 添加编辑相关的响应式变量和方法\nconst isEditModalVisible = ref(false)\nconst editForm = reactive({\n    id: null,\n    real_power: '',\n    real_reward: '',\n    need_allocate: ''\n})\n\nconst allocateOptions = [\n    { value: '是', text: '是' },\n    { value: '否', text: '否' }\n]\n\nconst editProfit = (row) => {\n    console.log('row:', row)\n    editForm.id = row.rowData.id\n    editForm.real_power = row.rowData.real_power\n    editForm.real_reward = row.rowData.real_reward\n    editForm.need_allocate = row.rowData.need_allocate === 1 ? '是' : '否'\n    isEditModalVisible.value = true\n}\n\nconst resetForm = () => {\n    editForm.id = null\n    editForm.real_power = ''\n    editForm.real_reward = ''\n    editForm.need_allocate = ''\n}\n\n// 分页\nconst handlePageChange = (startIndex) => {\n    queryParams.page = Math.ceil(startIndex / queryParams.pagesize)\n    currentStartIndex.value = startIndex\n    fetchData()\n}\n\nconst refreshList = () => {\n    fetchData()\n\tfetchMachineOptions()\n}\n\nconst refreshData = () => {\n    fetchData()\n\tfetchMachineOptions()\n}\n\n// 初始化加载数据\nfetchData()\nfetchMachineOptions()\n</script>\n\n<style scoped>\n.machines-list {\n    padding: 20px;\n}\n\n.filters-row {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    align-items: center;\n}\n\n.filter-item {\n    min-width: 150px;\n}\n\n.mobile-list-item {\n    padding: 10px;\n}\n\n.mobile-actions {\n    display: flex;\n    justify-content: flex-end;\n    margin-top: 10px;\n}\n\n.action-buttons {\n    display: flex;\n    gap: 0.5rem;\n    justify-content: center;\n    padding-left: 5px;\n    padding-right: 5px;\n    min-width: 40px; /* 确保按钮有足够空间 */\n  }\n\n@media (max-width: 768px) {\n    .machines-list {\n        padding: 10px;\n    }\n\n    .filter-item {\n        width: 100%;\n        min-width: unset;\n    }\n}\n\n.custom-modal .va-modal-footer {\n  display: none; /* 隐藏默认的 footer */\n}\n</style>"],"names":["toast","useToast","searchDate","ref","getYesterday","searchCurrency","groupOptions","searchGroup","currentStartIndex","totalItems","user_profits","loading","queryParams","reactive","convertToOptions","arr","item","fetchMachineOptions","response","machineOptions","defaultOption","error","formatDate","date","d","year","month","day","fetchData","params","_a","_b","_c","res","allocated","watch","statusMap","columns","handlePageChange","startIndex"],"mappings":"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"}