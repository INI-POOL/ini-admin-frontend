{"version":3,"file":"list-CgfwZx1y.js","sources":["../../src/pages/pre_alloc/list.vue"],"sourcesContent":["<template>\n    <va-card class=\"machines-list\">\n        <!-- 搜索和过滤区域 -->\n        <div class=\"mb-4\">\n\t\t\t选择日期：\n            <va-date-input\n                v-model=\"searchDate\"\n                placeholder=\"选择日期\"\n                class=\"mb-1 mr-5\"\n                :style=\"{ maxWidth: '20%'}\"\n\t\t\t\t:allowed-days=\"(date) => !isDateDisabled(date)\"\n            />\n           <va-button @click=\"refreshData\" class=\"ml-5\">\n               刷新\n           </va-button>\n        </div>\n\n\t\t<div class=\"mb-4\">\n\t\t  <va-progress-bar\n\t\t\t:model-value=\"progress\"\n\t\t\t:indeterminate=\"isLoading\"\n\t\t\t:label=\"currentStep\"\n\t\t\tcolor=\"primary\"\n\t\t\tclass=\"mb-2\"\n\t\t  />\n\t\t</div>\n\t\n        <!-- 列表区域 -->\n        <div class=\"table-responsive\">\n            \n            <VaDataTable :items=\"tasks\" :columns=\"columns\" striped class=\"responsive-table\">\n                <template #cell(record_date)=\"{ value }\">\n                    {{ value ? value.split('T')[0] : '' }}\n                </template>\n                <template #cell(need_allocate)=\"{ value }\">\n                    {{ value === 1 ? '是' : '否' }}\n                </template>\n                <template #cell(status)=\"{ value }\">\n                    {{ statusMap[value]}}\n                </template>\n                <template #cell(actions)=\"{ row }\">\n                    <va-button-group>\n                        <va-button small color=\"success\" class=\"mr-4\"  @click=\"fetchDataAndShowModal(row,'hashrate')\">模拟分配 (算力)</va-button>\n\t\t\t\t\t\t<va-button small color=\"primary\" class=\"mr-4\" @click=\"fetchDataAndShowModal(row,'time')\">模拟分配 (时长)</va-button>\n\t\t\t\t\t\t<va-button :disabled=\"row.rowData.status === 1\" small color=\"danger\" class=\"mr-4\" @click=\"confirmAlloc(row)\">实际分配 (算力)</va-button>\n                    </va-button-group>\n\t\t\t\t\t<va-modal\n\t\t\t\t\t  v-model=\"isNewModalVisible\"\n\t\t\t\t\t  title=\"实际分配 (算力)\"\n\t\t\t\t\t  :ok-text=\"'确认'\"\n\t\t\t\t\t  :cancel-text=\"'取消'\"\n\t\t\t\t\t  size=\"small\"\n\t\t\t\t\t  class=\"audit-modal\"\n\t\t\t\t\t  @ok=\"allocOnline(currentRow,'hashrate')\"\n\t\t\t\t\t>\n\t\t\t\t\t<div class=\"space-y-4\">\n\t\t\t\t\t    <div>\n\t\t\t\t\t      <div class=\"mb-2\" style=\"padding-top: 0.62rem;\">谷歌认证</div>\n\t\t\t\t\t      <VaInput v-model=\"auditForm.google_code\" width=\"200px\" placeholder=\"请输入谷歌认证码\" />\n\t\t\t\t\t    </div>\n\t\t\t\t\t  </div>\n\t\t\t\t\t</va-modal>\n\t\t\t\t\t <va-modal v-model=\"isModalVisible\" title=\"模拟分配数据\">\n\t\t\t\t\t        <va-card class=\"mb-4\">\n\t\t\t\t\t              <va-card-content>\n\t\t\t\t\t                <div class=\"grid grid-cols-2 gap-4\">\n\t\t\t\t\t                  <div>\n\t\t\t\t\t                    <va-text class=\"font-bold\">分配日期：</va-text>\n\t\t\t\t\t                    <va-text>{{ apiData[\"record_date\"] }}</va-text>\n\t\t\t\t\t                  </div>\n\t\t\t\t\t\t\t\t\t  <div>\n\t\t\t\t\t\t\t\t\t    <va-text class=\"font-bold\">总机器数：</va-text>\n\t\t\t\t\t\t\t\t\t    <va-text>{{ apiData[\"total_machines\"] }}</va-text>\n\t\t\t\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t\t\t\t  <div>\n\t\t\t\t\t\t\t\t\t    <va-text class=\"font-bold\">币种：</va-text>\n\t\t\t\t\t\t\t\t\t    <va-text>{{ row.rowData.currency?.toUpperCase() || 'Unknown' }}</va-text>\n\t\t\t\t\t\t\t\t\t  </div>\n\t\t\t\t\t\t\t\t\t  <div>\n\t\t\t\t\t\t\t\t\t    <va-text class=\"font-bold\">总分配收益：</va-text>\n\t\t\t\t\t\t\t\t\t    <va-text>{{ apiData[\"total_alloc_profits\"]?.toFixed(6) }}</va-text>\n\t\t\t\t\t\t\t\t\t  </div>\n\t\t\t\t\t                  <div>\n\t\t\t\t\t                    <va-text class=\"font-bold\">节点收益：</va-text>\n\t\t\t\t\t                    <va-text>{{ apiData[\"total_profits\"]?.toFixed(6) }}</va-text>\n\t\t\t\t\t                  </div>\n\t\t\t\t\t                  <div>\n\t\t\t\t\t                    <va-text class=\"font-bold\">总手续费：</va-text>\n\t\t\t\t\t                    <va-text>{{ apiData[\"total_fees\"]?.toFixed(6) }}</va-text>\n\t\t\t\t\t                  </div>\n\t\t\t\t\t                </div>\n\t\t\t\t\t              </va-card-content>\n\t\t\t\t\t            </va-card>\n\t\t\t\t\t      \n\t\t\t\t\t            <!-- 用户分配详情表格 -->\n\t\t\t\t\t            <va-card>\n\t\t\t\t\t              <va-card-title>用户分配详情</va-card-title>\n\t\t\t\t\t              <va-card-content>\n\t\t\t\t\t                <VaDataTable\n\t\t\t\t\t                  :items=\"apiData['user_alloc_detail']\"\n\t\t\t\t\t                  :columns=\"columnsNew\"\n\t\t\t\t\t                  striped\n\t\t\t\t\t                  hoverable\n\t\t\t\t\t                >\n\t\t\t\t\t\t\t\t\t\t<template #cell(day_profits)=\"{ value }\">\n\t\t\t\t\t\t\t\t\t\t\t{{ parseFloat(value).toFixed(6) }}\n\t\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t\t<template #cell(fees)=\"{ value }\">\n\t\t\t\t\t\t\t\t\t\t\t{{ parseFloat(value).toFixed(6) }}\n\t\t\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t\t\t</VaDataTable>\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t              </va-card-content>\n\t\t\t\t\t            </va-card>\n\t\t\t\t\t </va-modal>\n                </template>\n            </VaDataTable>\n\t\t\t<va-loading v-if=\"isLoading\" :message=\"currentStep\" />\n        </div>\n\n        <!-- 分页 -->\n        <div class=\"flex justify-end mt-4\">\n            <VaPagination\n                v-model=\"currentStartIndex\"\n                :page-size=\"queryParams.pagesize\"\n                visible-pages=\"5\"\n                :total=\"totalItems\"\n                buttons-preset=\"secondary\"\n                boundary-numbers\n                @update:modelValue=\"handlePageChange\"\n            />\n            <span class=\"ml-4 self-center text-gray-600\">\n                共 {{ totalItems }} 条记录\n            </span>\n        </div>\n    </va-card>\n</template>\n\n<script setup>\nimport { ref, reactive,computed,h } from 'vue'\nimport { getAllocTasks,preAlloc,alloc } from \"../../api/allocate\"\nimport { formatDateTime,isDateDisabled,getYesterday,convertDateTimeToDate } from \"../../utils/date.ts\"\nimport { useToast } from \"vuestic-ui\"\nimport { getUser } from \"../../utils/auth\";\nimport { useRouter } from 'vue-router';\n\nconst router = useRouter();\n\nconst { init: toast } = useToast()\n\n// 修改初始值\nconst searchDate = ref(getYesterday(8))\n\nconst searchCurrency = ref('')\n// const currencyOptions = ref([\n//     { value: 'aleo', text: 'Aleo' },\n//     // 其他币种选项\n// ])\nconst allocOptions = ref([\n    { value: 'hashrate', text: '算力' },\n    { value: 'time', text: '时长' },\n])\n\nconst currentStep = ref(''); // 当前步骤\nconst progress = ref(0); // 进度百分比\nconst isLoading = ref(false);\n\n\nconst simulateStep = (delay) => {\n  return new Promise((resolve) => setTimeout(resolve, delay));\n};\n\nconst showSuccessToast = () => {\n  toast({\n    message: \"\",\n    color: \"success\",\n\tduration: 50000,\n    render: () =>\n      h(\"div\", [\n        \"分配成功，\",\n        h(\n          \"a\",\n          {\n            href: \"javascript:void(0);\",\n            style: \"color: #fff; text-decoration: underline;\",\n            onClick: () => goToAllocTasks(),\n          },\n          \"请前往分配记录查看\"\n        ),\n      ]),\n  });\n};\n\nconst goToAllocTasks = () => {\n  router.push({ name: \"allocated\" });\n};\n\nconst auditForm = reactive({\n});\n\nconst currentStartIndex = ref(1)\nconst totalItems = ref(0)\nconst tasks = ref([])\nconst loading = ref(false)\nconst currentRow = ref(null);\n\n// 修改查询参数的初始化\nconst queryParams = reactive({\n    page: 1,\n    pagesize: 15,\n    date: new Date().toISOString().split('T')[0],\n    currency: 'aleo'\n})\n\nconst isModalVisible = ref(false); // 控制弹出框显示\nconst isNewModalVisible = ref(false);\nconst apiData = ref(null); // 存储后端返回数据\n\nconst columnsNew = [\n  { key: 'uid', label: '用户UID'},\n  { key: 'sub_user_name', label: '子账户名' },\n  { key: 'machines', label: '机器数' },\n  { key: 'day_profits', label: '分配收益 '},\n  { key: 'fees', label: '手续费 ' },\n];\n\nconst confirmAlloc = (row) => {\n  currentRow.value = row; // 设置当前行\n  isNewModalVisible.value = true;\n};\n\n// 添加日期格式化函数\nconst formatDate = (date) => {\n    if (!date) return ''\n    const d = new Date(date)\n    const year = d.getFullYear()\n    const month = String(d.getMonth() + 1).padStart(2, '0')\n    const day = String(d.getDate()).padStart(2, '0')\n    return `${year}-${month}-${day}`\n}\n\n// 点击按钮逻辑\nconst fetchDataAndShowModal = async (row,allocType) => {\n  loading.value = true; // 显示加载状态\n  console.log(\"record_date is\",row.rowData.record_date)\n  try {\n    const params = {\n        date: convertDateTimeToDate(row.rowData.record_date),\n        currency: row.rowData.currency,\n\t\tgroup: row.rowData.group,\n\t\talloc_type: allocType || 'hashrate'\n    }\n    const response = await preAlloc(params)\n    apiData.value = response; // 存储返回数据\n    isModalVisible.value = true; // 显示弹出框\n  } catch (error) {\n    console.error('获取数据失败:', error);\n    alert('获取数据失败，请重试！');\n  } finally {\n    loading.value = false; // 隐藏加载状态\n  }\n};\n\nconst allocOnline = async (row,allocType) => {\n  isLoading.value = true; // 显示加载状态\n  let username = getUser();\n  \n  if(!auditForm.google_code){\n    toast({\n      message: \"谷歌认证码不能为空\",\n      color: \"danger\",\n    });\n    return;\n  }\n  \n  console.log(\"data is\",row.rowData)\n  \n  try {\t  \n //    currentStep.value = '正在检查机器运行情况...';\n\t// toast({\n\t//     message: currentStep.value,\n\t//     color: \"info\",\n\t// \tduration: 5000\n\t// })\n\t// progress.value = 33;\n    // await simulateStep(2000); // 模拟 2 秒执行时间\n\t// currentStep.value = '正在检查节点收益...';\n\t// toast({\n\t//     message: currentStep.value,\n\t//     color: \"info\",\n\t// \tduration: 5000\n\t// })\n\t// progress.value = 66; // 66%\n\t// await simulateStep(2000); // 模拟 2 秒执行时间\n\n\tawait simulateStep(2000);\n    const params = {\n        date: convertDateTimeToDate(row.rowData.record_date),\n        currency: row.rowData.currency,\n\t\tgroup: row.rowData.group,\n\t\talloc_type: allocType,\n\t\tuser_name: username,\n\t\tgoogle_code: auditForm.google_code\n    }\n    const response = await alloc(params)\n\t\n\t// currentStep.value = '分配成功，请前往分配记录查看';\n\t// progress.value = 100; // 100%\n    showSuccessToast();\n\t\n\tfetchData();\n  } catch (error) {\n    toast({\n        message: error || \"获取数据失败\",\n        color: \"info\",\n    })\n  } finally {\n    isLoading.value = false; // 隐藏加载状态\n\t// currentStep.value = '';\n\t// progress.value = 0;\n  }\n};\n\n// 修改 fetchData 方法\nconst fetchData = async () => {\n    loading.value = true\n    try {\n        const params = {\n            date: queryParams.date,\n            currency: searchCurrency.value?.value || 'aleo'\n        }\n        \n        // 只有当选择了日期时才添加日期参数\n        if (searchDate.value) {\n            params.date = formatDate(searchDate.value)\n        }\n        \n        const res = await getAllocTasks(params)\n        // 因为拦截器已经处理了 res.data 的解构，这里直接使用返回值\n        if (res?.tasks) {\n            tasks.value = res.tasks\n            console.log(tasks.value)\n            totalItems.value = res.total\n        } else {\n            tasks.value = []\n            totalItems.value = 0\n        }\n\t\tprogress.value = 100\n    } catch (error) {\n        console.error(\"获取数据失败:\", error)\n        toast({\n            message: error.message || \"获取数据失败\",\n            color: \"danger\",\n        })\n        tasks.value = []\n        totalItems.value = 0\n    } finally {\n        loading.value = false\n    }\n}\n\n// 添加 watch 以监听搜索条件变化\nimport { watch } from 'vue'\n\nwatch([searchDate, searchCurrency], () => {\n    queryParams.page = 1\n    currentStartIndex.value = 1\n    fetchData()\n})\n\nconst statusMap = {\n                0: '未开始',\n                1: '已完成',\n                2: '已失败',\n            }\n\nconst columns = [\n    { key: 'id', label: 'ID' },\n    { key: 'record_date', label: '日期' },\n    { key: 'currency', label: '币种' },\n    { key: 'group', label: '组名' },\n    { key: 'status', label: '状态' },\n    { key: 'actions', label: '操作' }  // 添加操作列\n]\n\n// 添加编辑相关的响应式变量和方法\nconst isEditModalVisible = ref(false)\nconst editForm = reactive({\n    id: null,\n    real_power: '',\n    real_reward: '',\n    need_allocate: ''\n})\n\nconst allocateOptions = [\n    { value: '是', text: '是' },\n    { value: '否', text: '否' }\n]\n\nconst editProfit = (row) => {\n    console.log('row:', row)\n    editForm.id = row.rowData.id\n    editForm.real_power = row.rowData.real_power\n    editForm.real_reward = row.rowData.real_reward\n    editForm.need_allocate = row.rowData.need_allocate === 1 ? '是' : '否'\n    isEditModalVisible.value = true\n}\n\nconst resetForm = () => {\n    editForm.id = null\n    editForm.real_power = ''\n    editForm.real_reward = ''\n    editForm.need_allocate = ''\n}\n\n// 分页\nconst handlePageChange = (startIndex) => {\n    queryParams.page = Math.ceil(startIndex / queryParams.pagesize)\n    currentStartIndex.value = startIndex\n    fetchData()\n}\n\nconst refreshList = () => {\n    fetchData()\n}\n\nconst refreshData = () => {\n    fetchData()\n}\n\n// 初始化加载数据\nfetchData()\n</script>\n\n<style scoped>\n.machines-list {\n    padding: 20px;\n}\n\n.filters-row {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n    align-items: center;\n}\n\n.filter-item {\n    min-width: 150px;\n}\n\n.mobile-list-item {\n    padding: 10px;\n}\n\n.mobile-actions {\n    display: flex;\n    justify-content: flex-end;\n    margin-top: 10px;\n}\n\n.action-buttons {\n    display: flex;\n    gap: 0.5rem;\n    justify-content: center;\n    padding-left: 5px;\n    padding-right: 5px;\n    min-width: 40px; /* 确保按钮有足够空间 */\n  }\n\n@media (max-width: 768px) {\n    .machines-list {\n        padding: 10px;\n    }\n\n    .filter-item {\n        width: 100%;\n        min-width: unset;\n    }\n}\n\n.custom-modal .va-modal-footer {\n  display: none; /* 隐藏默认的 footer */\n}\n</style>"],"names":["router","useRouter","toast","useToast","searchDate","ref","getYesterday","searchCurrency","currentStep","progress","isLoading","simulateStep","delay","resolve","showSuccessToast","h","goToAllocTasks","auditForm","reactive","currentStartIndex","totalItems","tasks","loading","currentRow","queryParams","isModalVisible","isNewModalVisible","apiData","columnsNew","confirmAlloc","row","formatDate","date","d","year","month","day","fetchDataAndShowModal","allocType","params","convertDateTimeToDate","response","preAlloc","error","allocOnline","username","getUser","alloc","fetchData","_a","res","getAllocTasks","watch","statusMap","columns","handlePageChange","startIndex","refreshData"],"mappings":"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"}