{"version":3,"file":"Login-CBg9mNNv.js","sources":["../../src/pages/auth/Login.vue"],"sourcesContent":["<template>\n  <VaForm ref=\"form\" @submit.prevent=\"submit\">\n    <h1 class=\"font-semibold text-4xl mb-4\">登陆</h1>\n\n    <VaInput\n      v-model=\"formData.username\"\n      :rules=\"[validators.required, validators.username]\"\n      class=\"mb-4\"\n      label=\"用户名\"\n      type=\"text\"\n    />\n    <VaValue v-slot=\"isPasswordVisible\" :default-value=\"false\">\n      <VaInput\n        v-model=\"formData.password\"\n        :rules=\"[validators.required]\"\n        :type=\"isPasswordVisible.value ? 'text' : 'password'\"\n        class=\"mb-4\"\n        label=\"密码\"\n        @clickAppendInner.stop=\"\n          isPasswordVisible.value = !isPasswordVisible.value\n        \"\n      >\n        <template #appendInner>\n          <VaIcon\n            :name=\"\n              isPasswordVisible.value ? 'mso-visibility_off' : 'mso-visibility'\n            \"\n            class=\"cursor-pointer\"\n            color=\"secondary\"\n          />\n        </template>\n      </VaInput>\n    </VaValue>\n\n    <div class=\"flex justify-center mt-4\">\n      <VaButton class=\"w-full\" @click=\"submit\"> 登陆</VaButton>\n    </div>\n  </VaForm>\n</template>\n\n<script lang=\"ts\" setup>\nimport { reactive } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { useForm, useToast } from \"vuestic-ui\";\nimport { validators } from \"../../services/utils\";\n// import { login } from '../../api/user'\nimport { setToken } from \"../../utils/auth\";\nimport { generateToken } from \"../../services/utils\";\n\n// const { validate } = useForm(\"form\");\nconst { push } = useRouter();\nconst { init } = useToast();\n\nconst formData = reactive({\n  username: \"\",\n  password: \"\",\n  keepLoggedIn: false,\n});\n\nconst submit = () => {\n  // ||  (formData.username === \"umpool\" &&\n  // formData.password === \"gT9@pY6uV*2S\")\n  if (\n    (formData.username.trim() === \"admin\" &&\n    formData.password.trim() === \"A3f!7#b2Pz9L\") ||  (formData.username.trim() === \"umpool\" &&\n    formData.password.trim() === \"gT9@pY6uV*2S\")\n  ) {\n    const token = generateToken();\n    setToken(token);\n    init({ message: \"登陆成功！\", color: \"success\" });\n    push({ name: \"withdraw\" });\n  } else {\n    init({ message: \"登陆失败！\", color: \"error\" });\n  }\n};\n\n// const handleLogin = async () => {\n//   const res = await login(formData)\n//   if (res.token) {\n//     setToken(res.token)\n//     push({ name: 'dashboard' })\n//   }\n// }\n\n/* ******接口调用******* */\n// export default defineComponent({\n//   setup() {\n//     const router = useRouter()\n//     const route = useRoute()\n\n//     const handleLogin = async (formData: any) => {\n//       try {\n//         const res = await login(formData)\n//         if (res.token) {\n//           setToken(res.token)\n//           // 获取重定向地址或默认跳转到首页\n//           const redirectPath = route.query.redirect as string || '/'\n//           router.push(redirectPath)\n//         }\n//       } catch (error) {\n//         console.error('登录失败:', error)\n//       }\n//     }\n\n//     return {\n//       handleLogin\n//     }\n//   }\n// })\n</script>\n"],"names":["push","useRouter","init","useToast","formData","reactive","submit","token","generateToken","setToken"],"mappings":"8RAkDM,KAAA,CAAE,KAAAA,GAASC,IACX,CAAE,KAAAC,GAASC,IAEXC,EAAWC,EAAS,CACxB,SAAU,GACV,SAAU,GACV,aAAc,EAAA,CACf,EAEKC,EAAS,IAAM,CAGnB,GACGF,EAAS,SAAS,SAAW,SAC9BA,EAAS,SAAS,SAAW,gBAAqBA,EAAS,SAAS,SAAW,UAC/EA,EAAS,SAAS,SAAW,eAC7B,CACA,MAAMG,EAAQC,IACdC,EAASF,CAAK,EACdL,EAAK,CAAE,QAAS,QAAS,MAAO,SAAW,CAAA,EACtCF,EAAA,CAAE,KAAM,UAAA,CAAY,CAAA,MAEzBE,EAAK,CAAE,QAAS,QAAS,MAAO,OAAS,CAAA,CAC3C"}